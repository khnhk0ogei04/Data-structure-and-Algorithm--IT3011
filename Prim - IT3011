#include<bits/stdc++.h>
const int MAXN = 1001;
using namespace std;
    struct canh{
        int u,v,w;
    };
    
    int n,m;
    vector<pair<int,int>>adj[MAXN];
    bool visited[MAXN];
    void inp(){
        std::cin>>n>>m;
        for ( int i = 1 ; i <= m ; i++ ){
            int u,v,w;
            std::cin>>u>>v>>w;
            adj[u].push_back({v,w});
            adj[v].push_back({u,w});
        }
        memset(visited,false,sizeof(visited));
    }
    void Prim( int u ){
        vector<canh>MST;
        int d = 0;
        visited[u] = true;
        while ( MST.size() < n - 1 ){
            int minw = INT_MAX;
            int X,Y;
            for ( int i = 1 ; i <= n ; i++ ){
                if (visited[i]) {
                    cout<<i<<" ";
                    for (pair<int,int>it : adj[i]){
                        int j = it.first, trongso = it.second;
                        if (!visited[j] && trongso < minw){
                            minw = trongso;
                            X = j, Y = i;
                        }
                    } 
                }
            }
            MST.push_back({X,Y,minw});
            d += minw;
            visited[X] = true;
        }
        std::cout<<d<<std::endl;
        for ( canh e: MST ){
            std::cout<<e.u<<" "<<e.v<<" "<<e.w<<std::endl;
        }
    }
    int main(){
        inp();
        Prim(1);
        return 0;
    }
/*    6 8
1 2 9
1 3 4
2 3 1
2 4 6
3 5 2
4 5 3
4 6 10
5 6 8 */
