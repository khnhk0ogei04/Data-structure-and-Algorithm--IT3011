#include<bits/stdc++.h>
#include<iostream>
#define MAXN 1001 
	using namespace std;
	int n, PreOrder[MAXN],InOrder[MAXN];
	struct node{
		int data;
		node *left;
		node *right;
		node ( int x ){
			data = x;
			left = NULL;
			right = NULL;
		}
	};
	int tim( int A[], int x ){
		for ( int i = 0 ; i < n ; i++ ){
			if (A[i] == x) return i;
		}
		return 0;
	}
	
	void buildtree( node *root, int in_left, int in_right ){
		int in_pos = tim(InOrder,root->data);
		int pre_pos = tim(PreOrder, root->data);
		if ( in_pos > in_left ){
			root->left = new node(PreOrder[pre_pos+1]);
			buildtree(root->left,in_left,in_pos-1);
		}
		if ( in_pos < in_right ){
			int soluongtaptrai = in_pos - in_left;
			root->right = new node(PreOrder[pre_pos+soluongtaptrai+1]);
			buildtree(root->right,in_pos + 1, in_right);
		}
	}
	void PostOrder ( node *root ){
		if (root) {
			PostOrder(root->left);
			PostOrder(root->right);
			std::cout<<root->data<<" ";
		}
	}
	int main(){
	//	int n;
		std::cin>>n;
		for ( int i = 0 ; i < n ; i++ ){
			std::cin>>PreOrder[i];
		}
		for ( int i = 0 ; i < n ; i++ ){
			std::cin>>InOrder[i];
		}
		node *root = new node(PreOrder[0]);
		buildtree(root,0,n-1);
		PostOrder(root);
		return 0;
	}
/*7
1 2 4 5 3 6 7
4 2 5 1 6 3 7
4 5 2 6 7 3 1 */
