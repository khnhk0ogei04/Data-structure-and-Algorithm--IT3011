#include<bits/stdc++.h>
const int MAXN = 1e3 + 1;
std::vector<int>adj[MAXN];
bool visited[MAXN];
int n,m;

    void inp(){
        std::cin>>n>>m;
        for ( int i = 1 ; i <= m ; i++ ){
            int u,v;
            std::cin>>u>>v;
            adj[u].push_back(v);
        }
    }
    std::stack<int>st;
    void dfs( int u ){
        visited[u] = true;
        for ( int v: adj[u] ){
            if (!visited[v])
            dfs(v);
        }
        st.push(u);
    }
    void solve(){
        inp();
        for ( int i = 1 ; i <= n ; i++ ){
            if (!visited[i]) dfs(i);
        }
        while (!st.empty()){
            std::cout<<st.top()<<" ";
            st.pop();
        }
    }
    int main(){
        solve();
        return 0;
    }
