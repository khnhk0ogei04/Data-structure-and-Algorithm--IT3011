#include<bits/stdc++.h>
#define MAXN 100
using namespace std;
int A[MAXN][MAXN],B[MAXN][MAXN];
int n1,m1,n2,m2;
int p[MAXN];
void inp()
{
    cin >>n1>>m1;
    memset(A,0,sizeof(A));
    memset(B,0,sizeof(B));
    for ( int i = 1 ; i <= m1 ; i++ ){
        int u,v;
        std::cin>>u>>v;
        A[u][v] = A[v][u] = 1;
    }
    std::cin>>n2>>m2;
    for ( int i = 1 ; i <= m2 ; i++ ){
        int u,v;
        std::cin>>u>>v;
        B[u][v] = B[v][u] = 1;
    }
}


bool kiemTra ()
{
    
    for (int i = 0; i < n1 -1; ++i) {
        for (int j = i+1; j < n1 ; ++j)
            if (A[i][j] != B[p[i]][p[j]]) return false;
    }

    return true;
}


bool kiemTraDangCau (){
    for (int i = 0; i < n1; ++i)  p[i] = i;

    do
    {
        if (kiemTra()) return true;
    } while (next_permutation(p, p+n1));

    return false;
}

int main() {
    inp();
    if (kiemTraDangCau()) cout<<"YES";
    else cout<<"NO";
    return 0;
}
