#include<bits/stdc++.h>
const int MAXN = 1e3 + 1;
using namespace std;
    struct vitri{
        int x;
        int y;
    };
    int n;
    vitri pnt[MAXN];
    int dp[MAXN][MAXN], res = 0;
    bool cmp( vitri a, vitri b ){
        return a.x < b.x;
    }
    int main(){
        std::cin>>n;
        for ( int i = 1; i <= n ; i++ ){
            std::cin>>pnt[i].x>>pnt[i].y;
        }
        std::sort(pnt + 1 , pnt + n + 1, cmp);
        for ( int i = 1; i <= n ; i++ ){
            dp[i][i] = pnt[i].y;
        }
        int dis1, dis2, res = 0;
        for ( int i = 2 ; i <= n ; i++ ){
            for ( int j = 1 ; j <= i - 1 ; j++ ){
                dp[i][j] = 0;
                dis1 = pnt[i].x - pnt[j].x;
                for ( int k = j ; k >= 1 ; k-- ){
                    dis2 = pnt[j].x - pnt[k].x;
                    if ( dis2 > dis1 ) break;
                    else dp[i][j] = std::max(dp[j][k] + pnt[i].y,dp[i][j]);
                }
                res = std::max(res,dp[i][j]);
            }
        }
        std::cout<<res;
        return 0;
    }
