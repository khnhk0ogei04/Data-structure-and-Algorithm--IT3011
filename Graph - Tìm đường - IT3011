#include<bits/stdc++.h>
const int MAXN = 1e3 + 1;
using namespace std;
    int n,m,s1,s2,t1,t2;
    char A[MAXN][MAXN];
    int dx[] = {-1,0,0,1};
    int dy[] = {0,-1,1,0};
    int ok = 0;
    void backtrack( int i, int j, int k_prev, int cnt ){
        std::cout<<i<<" "<<j<<" "<<k_prev<<" "<<cnt<<std::endl;
        if ( cnt > 3 ) return;
        if ( i == t1 && j == t2 ){
            ok = 1;
            return;
        }
        if ( ok == 1 ) return;
        A[i][j] = '*';
        for ( int k = 0 ; k <= 3 ; k++ ){
            int i1 = i + dy[k];
            int j1 = j + dx[k];
            if ( i1 >= 1 && i1 <= n && j1 >= 1 && j1 <= m && A[i1][j1] != '*'){
                if ( k == k_prev ){
                    backtrack(i1,j1,k,cnt);
                    A[i][j] = '.';
                }
                else {
                    backtrack(i1,j1,k,cnt + 1);
                    A[i][j] = '.';
            }
        }
        }
        
    }
    int main(){
        std::cin>>n>>m;
        for ( int i = 1 ; i <= n ; i++ ){
            for ( int j = 1 ; j <= m ; j++ ){
                std::cin>>A[i][j];
                if ( A[i][j] == 'S'){
                    s1 = i; 
                    s2 = j;
                }
                else if ( A[i][j] == 'T' ){
                    t1 = i;
                    t2 = j;
                }
            }
        }
    backtrack(s1,s2,-1,0);
    if (ok) std::cout<<"YES";
    else std::cout<<"NO";
    return 0;
    }
    
