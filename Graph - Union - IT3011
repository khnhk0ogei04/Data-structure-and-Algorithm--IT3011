#include<bits/stdc++.h>
const int MAXN = 1e3 + 1;

    int k,n,m,t = 1;
    int A[MAXN];
    std::vector<int>adj[MAXN];
    bool visited[MAXN];
    std::vector<int>temp[MAXN];
    void inp(){
        std::cin>>k>>n>>m;
        for ( int i = 1 ; i <= k ; i++ ){
            std::cin>>A[i];
        }
        for ( int i = 1 ; i <= m ; i++ ){
            int u,v;
            std::cin>>u>>v;
            adj[u].push_back(v);
       //     adj[v].push_back(u);
        }
    }
    void dfs ( int u ){
        visited[u] = true;
        temp[t].push_back(u);
        for ( int v: adj[u] ){
            if (!visited[v]) {
                dfs(v);
            }
        }
    }
    int main(){
        inp();
        for ( int i = 1 ; i <= n ; i++ ){
            dfs(A[i]);
            t++;
            std::memset(visited,0,sizeof(visited));
        }
        int dem[MAXN],cnt = 0;
        std::memset(dem,0,sizeof(dem));
        for ( int i = 1 ; i <= k ; i++ ){
            for ( auto x : temp[i] ) dem[x]++;
        }
           for ( int i = 1 ; i <= n ; i++ ){
            if (dem[i] == k) {
                cnt++;
                std::cout<<i<<" ";
            }
        }
        std::cout<<std::endl;
        std::cout<<cnt;
        return 0;
    }
    
